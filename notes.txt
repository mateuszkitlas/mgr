DONE
- not_solved_${number}
- histogram rozbić na kolory
- mf histogram więcej buckets
- scatter rozbić na trzy kolory
- scatter keep aspect ratio
- policzyć korelacje dla scatter plotów:
  scipy-learn https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.spearmanr.html
- rónica scorów ojciec(xtype) syn(ytype): histogram

IN PROGRESS:


TODO
- pary dzieci [internal], [not_solved] ????????
- postać kanoniczna. czy dzieci nie sa blizniakami
- {Melphalan, cytenamide, } czemu nie ma wyników, skoro solved > 0
- średio jak due jest drzewo poraki
- matplotlib kolory dla daltonistów
- {scatter, histogram} - ręcznie wywalic ałtlajery (mf)


- histogram z [
  boxplot(sa, [[internal, solved], [not_solved]], max),
  boxplot(mf, [[internal, solved], [not_solved]], min),
  boxplot(sc, [[internal, solved], [not_solved]], max),
  boxplot(sa, [[solved], [not_solved]], max),   -- krzywa roc
  boxplot(sc, [[solved], [not_solved]], max),   -- krzywa roc
  boxplot(mf, [[solved], [not_solved]], min)
  
]
- [rzyjrzeć sie takim nołdom, które są ałtlajerami. moe to są liscie, moze cośtam
- scikit-learn ROC, AUC? (wiersze od 24-29)

for treshold in [0.15, 0.4, 0.6]:
  podmienić klasyfikator.
    - zrobić wcześniej przeskalowanie  z (min, max) -> [0,1] * treshold
    - true/false z tresholdem z krzywej ROC
  - przeskalowanie: scipy numpy normalize
    - sc i sa - wyciagnąć z pejperów min i max
    - czy wysolwuje więcej?
    - zachować drzewo i tak. moe coś z tym zrobimy
!========    - zobaczyć statystyke dla drzew X1
!========  X1: statystyka dla drzewa: głębokość najnnizszego liscia solved


- heatmapa [2, 5] AUC; współczynnik korelacji

- tabelka: scory / [ai,asckos]
 dane: AUC
 


- mierzymy w rozmiarze drzewa
- zrobić statystyki per konfiguracja
  - średnia zmiana not_solved; solved; internal
  - liczba niesolvovowalnych, które się zaczęły solvować
  - X1 statystyka po głębokości naniszego liścia solved
- teraz askcos!

